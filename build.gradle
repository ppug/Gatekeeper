plugins {
    id 'fabric-loom'
    id 'maven-publish'
    id 'org.jetbrains.kotlin.jvm'
    id 'com.github.hierynomus.license'
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

archivesBaseName = project.mod_name + "-" + project.mod_version + "+" + project.mod_target
group = project.mod_group

minecraft {
    accessWidener = file("src/main/resources/gatekeeper.accesswidener")
}

repositories {
    maven {
        name = "Fabric"
        url = "https://maven.fabricmc.net/"
    }

    mavenCentral()
}

dependencies {
    // Minecraft
    minecraft "com.mojang:minecraft:${project.minecraft_version}"

    // Yarn
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"

    // Fabric Loader
    modImplementation "net.fabricmc:fabric-loader:${project.fabric_loader_version}"

    // Fabric API
    modApi "net.fabricmc.fabric-api:fabric-api:${fabric_api_version}"

    // Fabric Language Kotlin
    modImplementation "net.fabricmc:fabric-language-kotlin:${project.fabric_kotlin_version}"

    // Klaxon
    modImplementation "com.beust:klaxon:${project.klaxon_version}"
    include "com.beust:klaxon:${project.klaxon_version}"
}

processResources {
    inputs.property "version", project.version

    from(sourceSets.main.resources.srcDirs) {
        include "fabric.mod.json"
        expand "version": project.version
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude "fabric.mod.json"
    }
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = "sources"
    from sourceSets.main.allSource
}

jar {
    from "LICENSE"
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact(remapJar) {
                builtBy remapJar
            }
            artifact(sourcesJar) {
                builtBy remapSourcesJar
            }
        }
    }

    repositories {
        mavenLocal()
    }
}

compileKotlin.kotlinOptions.jvmTarget = "1.8"